#!/usr/local/bin/python3

import time
import pync
import argparse
import json
import os.path

from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class Watcher:
    def __init__(self, arrPath):
        self.observer = Observer()
        self.paths = arrPath

    def run(self):
        threads = []
        objEventHandler = EventHandler()

        for path in arrPath:
            self.observer.schedule(objEventHandler, path, recursive=True)
            threads.append(self.observer)

        self.observer.start()
        try:
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            self.observer.stop()
            print("Error")

        self.observer.join()

class EventHandler(FileSystemEventHandler):
    def on_modified(self, event):
        print("Got it!")
        filename = event.src_path.split("/")[-1]

        intLine = 1        
        strExe = '~/bin/phpstorm --line ' + str(intLine) + ' ' + event.src_path

        pync.notify('Hello World', title=filename, execute=strExe)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Watch some directories for logfiles.')
    parser.add_argument('-l', action="store_true", default=False)
    parser.add_argument('--path', metavar='path', type=str, help='add path to list')
    parser.add_argument('-r', action="store_true", default=False)
                        
    args = parser.parse_args()
    home = os.path.expanduser("~")

    strConfigFile = home + '/.watch-log.json'
    arrPath = []

    if os.path.isfile(strConfigFile):
        with open(strConfigFile, 'r') as filehandle:
            arrPath = json.load(filehandle)

    if (args.l):
        print(arrPath)

    elif (args.path is not None):
        print(args.path)
        arrPath.append(args.path)
        with open(strConfigFile, 'w+') as filehandle:
            json.dump(arrPath, filehandle)

    elif (args.r):
        objWatcher1 = Watcher(arrPath)
        objWatcher1.run()

    else:
        parser.print_usage

